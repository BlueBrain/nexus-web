name: Review

on: [pull_request]

jobs:
  setup:
    runs-on: it
    outputs:
      cache-key: ${{ steps.cache-node-modules.outputs.cache-key }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: 'yarn'
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: ~/.cache/yarn
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-
      - name: Install dependencies ðŸš€
        run: yarn install --frozen-lockfile

  lint-and-style:
    needs: setup
    runs-on: it
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: 'yarn'
      - name: Install dependencies ðŸš€
        run: yarn install --frozen-lockfile --prefer-offline
      - name: Linting âœ¨
        run: yarn lint
      - name: Style check ðŸ’…
        run: yarn style

  test:
    needs: setup
    runs-on: it
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: 'yarn'
      - name: Install dependencies ðŸš€
        run: yarn install --frozen-lockfile --prefer-offline
      - name: Running test ðŸ›«ðŸ›¬
        run: yarn test --coverage src
      - name: Upload coverage to Codecov ðŸ’Œ
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  docker-build-and-e2e:
    needs: setup
    runs-on: it
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: 'yarn'
      - name: Install dependencies ðŸš€
        run: yarn install --frozen-lockfile --prefer-offline
      - name: Build fusion docker image
        run: docker build . --tag=nexus-web:fresh
      - name: Start services
        run: docker-compose -f ci/docker-compose.yml up -d && sleep 60
      - name: Copy nexus-web into Cypress container
        run: docker cp ./. cypress:/e2e
      - name: e2e tests
        run: >
          echo | timeout --verbose 30m docker exec
          -e 'DEBUG=cypress:launcher:browsers'
          -t
          cypress
          cypress run
          --config-file cypress.config.ts
          --browser chrome
          --record
          --key ${{ secrets.CYPRESS_RECORD_KEY }}
      - name: Cleanup Docker Containers
        if: always()
        run: docker-compose -f ci/docker-compose.yml down --rmi "local" --volumes
